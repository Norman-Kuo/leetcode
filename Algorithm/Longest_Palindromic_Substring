import re
class Solution:
    def longestPalindrome(self, s):
        """
        :type s: str
        :rtype: str
        """
        #s = 'abcddcba'
        palindrome = ""
        if len(s) ==1:
            palindrome=s
        else:
            for i in range(len(s)-1):
                string= s[i] + s[i+1]
                #print(string[::-1])
                if string[::-1] in s:
                    index_string = [m.start() for m in re.finditer(string[::-1], s)]
                    for j in index_string:
                        forward = s[i:j+3]
                        #print(forward)
                        if forward == forward[::-1]:
                            if len(forward) > len(palindrome):
                                palindrome = forward
                else:
                    single = s[i]
                    index_string = [m.start() for m in re.finditer(single, s)]
                    for j in index_string:
                        forward = s[i:j+1]
                        if forward == forward[::-1]:
                            if len(forward) > len(palindrome):
                                palindrome = forward
        return(palindrome)
